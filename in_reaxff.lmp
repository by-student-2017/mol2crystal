#---------------------------------------------
# user setting
variable reaxff_file string "ffield.reax.2024X17.CHONSSiPtZrNiAuVBiTiZnCuMg" # ReaxFF file name
variable Pinit   equal  1.0     # 0.1 MPa ( 1.0 bar = 0.1 MPa)
variable Pobject equal 10.0     # 1.0 MPa (10.0 bar = 1.0 MPa)
variable Tinit   equal 273-269  # [K] (e.g., He 4 [K])
variable Tobject equal 273+25   # [K] (e.g., Room temperature 298 [K])
variable Nout    equal 1000     # output (every Nout)
#---------------------------------------------

units real
dimension 3
boundary p p p
atom_style charge

read_data crystal.data

replicate 1 1 1

#---------------------------------------------
# Automatically set with ASE and python3 (elements and masses)
variable elem string "C Ni S O H" # dummy
#---------------------------------------------

pair_style reaxff NULL safezone 2.0 mincap 1000 checkqeq no
pair_coeff * * ${reaxff_file} ${elem}

#variable epsilon equal 78.5  # Toluene:2.38, Chlorobenzene:5.69, water:78.5
#---------------------------------------------
#pair_style hybrid/overlay reaxff NULL safezone 1.6 mincap 100 coul/diel 3.5
#---------------------------------------------
#pair_coeff * * reaxff ${reaxff_file} ${elem}
#pair_coeff * * coul/diel ${epsilon} 1.375 0.112 # Toluene:2.38, Chlorobenzene:5.69, water:78.5
#---------------------------------------------

fix q0 all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff

neighbor 2 bin
neigh_modify every 10 delay 0 check yes

# output data
thermo 100
thermo_style custom step etotal temp lx ly lz vol press vol density

# Energy minimization
fix boxrelax all box/relax aniso 0.0
minimize 1.0e-6 1.0e-8 1000 10000
unfix boxrelax

write_data md_min.data

unfix q0
run 0
variable  natoms equal "count(all)" 
variable      x0 equal "lx"
variable      y0 equal "ly"
variable      z0 equal "lz"
variable      v0 equal "vol"
variable   etot0 equal "etotal"
variable   ecoh0 equal "pe/v_natoms"

variable mass_total equal mass(all)
variable density equal ${mass_total}/(0.6022*${v0})  # g/cm^3

print "-------------------------------------------------------------"
print "Show results of 1st step (Running Minimization)"
print "The number of atoms = ${natoms}"
print "The lattice constant, x (Angstoms) = ${x0}"
print "The lattice constant, y (Angstoms) = ${y0}"
print "The lattice constant, z (Angstoms) = ${z0}"
print "The volume (Angstoms^3) = ${v0}"
print "The total energy (kcal/mol) = ${etot0}"
print "The cohesive energy (kcal/mol) = ${ecoh0}"
print "The density (g/cm^3) = ${density}"
print "-------------------------------------------------------------"
print "minimization: Simulations completed !"

# Initial temperature setting at Tinit [K]
#velocity all create ${Tinit} 4928459 dist gaussian
velocity all set 0.0 0.0 0.0 # To prevent molecular breakdown

reset_timestep 0
# 0.25 fs step (Typical values ​​for ReaxFF)
timestep 0.1

fix q0 all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff

# Initial easing with NVT
fix fxnvt all nvt temp ${Tinit} ${Tobject} 500.0 tchain 1
run 4000 # 0.4 ps

write_data md_nvt.data

unfix q0
run 0
variable  natoms equal "count(all)" 
variable      x0 equal "lx"
variable      y0 equal "ly"
variable      z0 equal "lz"
variable      v0 equal "vol"
variable   etot0 equal "etotal"
variable   ecoh0 equal "pe/v_natoms"

variable mass_total equal mass(all)
variable density equal ${mass_total}/(0.6022*${v0})  # g/cm^3

print "-------------------------------------------------------------"
print "Show results of 1st step (Running Minimization)"
print "The number of atoms = ${natoms}"
print "The lattice constant, x (Angstoms) = ${x0}"
print "The lattice constant, y (Angstoms) = ${y0}"
print "The lattice constant, z (Angstoms) = ${z0}"
print "The volume (Angstoms^3) = ${v0}"
print "The total energy (kcal/mol) = ${etot0}"
print "The cohesive energy (kcal/mol) = ${ecoh0}"
print "The density (g/cm^3) = ${density}"
print "-------------------------------------------------------------"
print "NVT: Simulations completed !"

reset_timestep 0
# 0.25 fs step (Typical values ​​for ReaxFF)
timestep 0.001

fix q0 all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff

# Volume relaxation with NPT
# -------------------------------------------------------------
# drag is a damping coefficient that slows down the rate at which the box size changes.
# Smaller values ​​result in slower changes, while larger values ​​result in more rapid changes.
# 0.2 provides moderate damping (recommended value) for a good balance between stability and responsiveness.
# -------------------------------------------------------------
unfix fxnvt
fix fxnpt1 all npt temp ${Tinit} ${Tobject}   $(100.0*dt)  aniso ${Pinit} ${Pobject} $(2000.0*dt) drag 0.2
run 4000 # 4 fs

unfix fxnpt1
fix fxnpt2 all npt temp ${Tobject} ${Tobject} $(100.0*dt)  aniso ${Pobject} ${Pinit} $(2000.0*dt)  drag 0.2
run 4000 # 4 fs

# -------------------------------------------------------------
#dump 1 all dcd 100 md_npt.dcd
#dump_modify 1 unwrap yes
# -------------------------------------------------------------

write_data md_npt.data

unfix q0
run 0
variable  natoms equal "count(all)" 
variable      x0 equal "lx"
variable      y0 equal "ly"
variable      z0 equal "lz"
variable      v0 equal "vol"
variable   etot0 equal "etotal"
variable   ecoh0 equal "pe/v_natoms"

variable mass_total equal mass(all)
variable density equal ${mass_total}/(0.6022*${v0})  # g/cm^3

print "-------------------------------------------------------------"
print "Show results of 1st step (Running Minimization)"
print "The number of atoms = ${natoms}"
print "The lattice constant, x (Angstoms) = ${x0}"
print "The lattice constant, y (Angstoms) = ${y0}"
print "The lattice constant, z (Angstoms) = ${z0}"
print "The volume (Angstoms^3) = ${v0}"
print "The total energy (kcal/mol) = ${etot0}"
print "The cohesive energy (kcal/mol) = ${ecoh0}"
print "The density (g/cm^3) = ${density}"
print "-------------------------------------------------------------"
print "NPT: Simulations completed !"
